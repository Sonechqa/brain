@font-face{font-family:HelveticaNeueCyr-Roman;src:url(../fonts/helveticaneuecyr-roman.eot);src:url(../fonts/helveticaneuecyr-roman.eot?#iefix) format("embedded-opentype"),url(../fonts/helveticaneuecyr-roman.woff2) format("woff2"),url(../fonts/helveticaneuecyr-roman.woff) format("woff"),url(../fonts/helveticaneuecyr-roman.ttf) format("truetype"),url(../fonts/helveticaneuecyr-roman.svg#helveticaneuecyr-roman) format("svg")}@font-face{font-family:Cuprum;src:url(../fonts/cuprum.eot);src:url(../fonts/cuprum.eot?#iefix) format("embedded-opentype"),url(../fonts/cuprum.woff2) format("woff2"),url(../fonts/cuprum.woff) format("woff"),url(../fonts/cuprum.ttf) format("truetype"),url(../fonts/cuprum.svg#cuprum) format("svg")}@font-face{font-family:'Bebas Neue Regular';src:url(../fonts/bebas_neue_regular.eot);src:url(../fonts/bebas_neue_regular.eot?#iefix) format("embedded-opentype"),url(../fonts/bebas_neue_regular.woff2) format("woff2"),url(../fonts/bebas_neue_regular.woff) format("woff"),url(../fonts/bebas_neue_regular.ttf) format("truetype"),url(../fonts/bebas_neue_regular.svg#bebas_neue_regular) format("svg")}@font-face{font-family:HelveticaNeueCyr-LightItalic;src:url(../fonts/helveticaneuecyr-lightitalic.eot);src:url(../fonts/helveticaneuecyr-lightitalic.eot?#iefix) format("embedded-opentype"),url(../fonts/helveticaneuecyr-lightitalic.woff2) format("woff2"),url(../fonts/helveticaneuecyr-lightitalic.woff) format("woff"),url(../fonts/helveticaneuecyr-lightitalic.ttf) format("truetype"),url(../fonts/helveticaneuecyr-lightitalic.svg#helveticaneuecyr-lightitalic) format("svg")}@font-face{font-family:'Cuprum Italic';src:url(../fonts/cuprum_italic.eot);src:url(../fonts/cuprum_italic.eot?#iefix) format("embedded-opentype"),url(../fonts/cuprum_italic.woff2) format("woff2"),url(../fonts/cuprum_italic.woff) format("woff"),url(../fonts/cuprum_italic.ttf) format("truetype"),url(../fonts/cuprum_italic.svg#cuprum_italic) format("svg")}.rating{position:relative;display:inline-block;height:11px}.rating__inactive{height:11px;display:flex}.rating__star{background:url(/img/icons/star-inactive.png) repeat-x 0 0/11px 11px;position:relative;display:inline-block;height:11px;width:11px}.rating__star:not(:last-child){margin-right:1px}.rating__active{background:url(/img/icons/star-active.png) repeat-x 0 0/12px 11px;position:absolute;height:100%;width:100%;top:0;left:0}.banner{width:100%}.banner__img{width:100%}.button{font:13px HelveticaNeueCyr-LightItalic;background:#fff;max-width:360px;width:100%;display:flex;justify-content:center;color:#95979c;border:1px solid #95979c;padding:17px 0;transition:background-color ease .3s}@media screen and (max-width:1200px){.button{width:275px}}@media screen and (max-width:1105px){.button{width:293px}}@media screen and (max-width:982px){.button{max-width:none;width:450px}}@media screen and (max-width:968px){.button{max-width:none;width:349px}}@media screen and (max-width:836px){.button{max-width:none;width:301px}}@media screen and (max-width:736px){.button{max-width:none;width:265px}}@media screen and (max-width:636px){.button{max-width:none;width:229px}}@media screen and (max-width:536px){.button{max-width:none;width:290px}}@media screen and (max-width:436px){.button{max-width:none;width:274px}}@media screen and (max-width:386px){.button{max-width:none;width:244px}}@media screen and (max-width:320px){.button{max-width:none;width:260px}}.button:hover{background:rgba(61,53,57,.075)}.button--grey{font:14px HelveticaNeueCyr-Roman;background:#747474;color:#fff;padding:18px 0}.button--grey:hover{background:#919191}.above-header{display:flex;justify-content:flex-end;padding-top:20px;padding-bottom:17px}.above-header__link{font:12px Cuprum;color:#1d3369;transition:color ease .3s}.above-header__link:hover{color:#4863a8}.above-header__link--educate{color:#b93777;padding-right:70px}.above-header__link--educate:hover{color:#d3659c}.breadcrumb{display:flex;justify-content:center;padding-top:27px}.breadcrumb__link{font:13px HelveticaNeueCyr-Roman;color:#b93777;position:relative;transition:color ease .3s}.breadcrumb__link:hover{color:#d16fa0}.breadcrumb__link:last-child{color:#a8a8a8;transition:color ease .3s}.breadcrumb__link:last-child:hover{color:#c7b5b5}.breadcrumb__link:not(:last-child){padding-right:6px;margin-right:6px}.breadcrumb__link:not(:last-child)::before{background:#b93777;content:"";position:absolute;height:100%;width:1px;left:100%}.service{font:10px Cuprum;display:inline-block;text-align:center;border:1px solid #a8a8a8;padding:8px 10px;margin-bottom:4px;margin-right:4px;width:100%}.service--color-white{color:#a8a8a8;transition:background-color ease .3s}.service--color-white:hover{background:#ecebeb}.service--color-grey{background:#a8a8a8;color:#fff;transition:background-color ease .3s}.service--color-grey:hover{background:#bebdbd}.service--size-small{max-width:70px}.service--size-medium{max-width:106px}.service--size-big{max-width:144px}.burger{margin-left:15px;cursor:pointer;position:relative;height:40px;width:40px}@media screen and (min-width:1041px){.burger{display:none}}.burger__line{background:#b93777;width:40px;height:2px;position:absolute}.burger__line--l1{top:7px}.burger__line--l2{top:50%;transform:translate(0,-50%)}.burger__line--l3{bottom:7px}.burger__line--l4{display:none;transform:rotate(45deg);top:50%}.burger__line--l5{display:none;transform:rotate(-45deg);top:50%}.burger--active .burger__line--l1{display:none}.burger--active .burger__line--l2{display:none}.burger--active .burger__line--l3{display:none}.burger--active .burger__line--l4{display:block}.burger--active .burger__line--l5{display:block}.location{margin-top:28px;display:flex;align-items:center}.location__city{font:14px HelveticaNeueCyr-Roman;padding-left:7px;padding-top:5px;color:#5f5f5f}/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font:1em monospace,monospace}a{background:0 0}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font:1em monospace,monospace}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font:100%/1.15 inherit;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}template{display:none}[hidden]{display:none}*,::after,::before{box-sizing:inherit}html{box-sizing:border-box}body{font-family:Cuprum;margin:0}img{max-width:100%}a{text-decoration:none}.container{max-width:1140px;width:100%;margin:0 auto}@media screen and (max-width:1200px){.container{width:90%}}.header{display:flex;align-items:center;margin-top:40px;padding-left:23px;padding-right:18px}@media screen and (max-width:1040px){.header{justify-content:space-between;position:relative}}@media screen and (max-width:425px){.header__logo{position:absolute;right:25%}}@media screen and (max-width:425px){.header__logotype{display:none}}@media screen and (min-width:426px){.header__mob-logo{display:none}}@media screen and (max-width:355px){.header__mob-logo{width:140px;height:40px}}@media screen and (max-width:335px){.header__mob-logo{width:120px;height:30px;margin-top:5px}}.header__wrapper{display:flex;width:100%;justify-content:space-between;align-items:center}@media screen and (max-width:1040px){.header__wrapper{padding-left:250px;margin-right:20px}}@media screen and (max-width:870px){.header__wrapper{padding-left:0}}@media screen and (max-width:670px){.header__wrapper{position:absolute;opacity:0;display:flex;flex-direction:column;width:200px;right:0;background-color:rgba(255,255,255,.9);border-radius:10px;text-align:right;padding:15px 20px;top:calc(100% - 20px);align-items:flex-end}}@media screen and (max-width:1040px){.header__wrapper--active .header__navigation{opacity:1}}@media screen and (max-width:670px){.header__wrapper--active{opacity:1}}.header__link{font:15px 'Bebas Neue Regular';color:#000;transition:color ease .3s}.header__link:not(:last-child){margin-right:50px}@media screen and (max-width:1040px){.header__link:not(:last-child){margin-right:0;margin-bottom:5px}}.header__link:hover{color:#646464}.header__navigation{margin-left:50px;margin-right:auto}@media screen and (max-width:1040px){.header__navigation{position:absolute;opacity:0;display:flex;flex-direction:column;width:200px;right:10px;top:calc(100% - 20px);background-color:rgba(255,255,255,.7);border-radius:10px;text-align:right;padding:15px 20px}}@media screen and (max-width:670px){.header__navigation{position:static;width:auto;background-color:transparent;padding-right:0;margin-right:0}}.header__city{font:15px 'Bebas Neue Regular';background:0 0;color:#000;border:1px solid #5e6260;padding:13px 44px 13px 20px;cursor:pointer;transition:background-color ease .3s}.header__city img{margin-right:35px}.header__city:hover{background:rgba(255,255,255,.5)}@media screen and (max-width:1040px){.header__city{margin:auto}}@media screen and (max-width:670px){.header__city{margin-right:0}}.header__educate{font:12px Cuprum;color:#b93777;margin-left:32px;transition:color ease .3s}.header__educate:hover{color:#d3659c}@media screen and (max-width:670px){.header__educate{margin-top:10px;margin-bottom:5px}}.header__sign-in{font:12px Cuprum;color:#1d3369;margin-left:48px;transition:color ease .3s}.header__sign-in:hover{color:#4863a8}.header--authorized{background:url(/img/authorized/header-background.jpg) 0 0/cover;margin-top:0}.header--authorized .container{display:flex;justify-content:space-between;align-items:center;padding-top:39px;padding-bottom:42px;padding-left:23px}.header--authorized .header__navigation{margin-left:49px;margin-right:31px}.header--authorized .header__link{font:15px 'Bebas Neue Regular';color:#fff;transition:color ease .3s}.header--authorized .header__link:not(:last-child){margin-right:70px}.header--authorized .header__link:hover{color:#e9dada}.header--authorized .header__city{font:15px 'Bebas Neue Regular';background:0 0;color:#fff;border:1px solid #fff;padding:13px 44px 13px 20px;margin-right:30px;width:165px;cursor:pointer;transition:background-color ease .3s}.header--authorized .header__city img{margin-right:35px}.header--authorized .header__city:hover{background:rgba(218,214,214,.5)}.header--authorized .header__profile{margin-right:56px;cursor:pointer}.header--authorized .header__icon{background:0 0;border:none;padding:0;width:25px;height:25px;cursor:pointer;border-radius:100%;transition:background-color ease .3s}.header--authorized .header__icon img{width:25px;height:25px}.header--authorized .header__icon:hover{background:rgba(218,214,214,.5)}.header--authorized .header__icon--ribbon{width:25px;height:25px}.header--authorized .header__icon--ribbon img{width:17px;height:23px;padding-top:2px}.footer{background:url(/img/footer/background.jpg);margin-top:108px}.footer .container{display:flex;justify-content:space-between}@media screen and (max-width:686px){.footer .container{position:relative}}@media screen and (max-width:686px){.footer{background-size:cover;padding-bottom:40px}}.footer__img-logo{margin-left:71px;margin-top:75px}@media screen and (max-width:686px){.footer__img-logo{margin-top:25px}}.footer__adaptive{display:flex;flex-direction:column;text-align:center;margin-top:20px}@media screen and (min-width:687px){.footer__adaptive{display:none}}.footer__adaptive-link{font:15px/30px 'Bebas Neue Regular';color:#000;transition:color ease .3s}.footer__adaptive-link:hover{color:#464545}.footer__links{max-width:264px;width:100%}@media screen and (max-width:686px){.footer__links{margin:auto}}.footer__socials{list-style:none;width:100%;margin-top:71px;margin-bottom:76px;display:flex;justify-content:space-between;padding-left:0;position:relative}@media screen and (max-width:686px){.footer__socials{margin-top:40px}}.footer__link{display:flex;justify-content:center;align-items:center;position:relative;width:41px;height:41px}.footer__link::before{background:#d3cac9;content:"";position:absolute;border-radius:50%;width:100%;height:100%;z-index:1;transition:background-color ease .3s}.footer__link:hover::before{background:#e0d5d4}@media screen and (max-width:786px){.footer__link{width:38px;height:38px}}.footer__img{position:relative;z-index:2}.footer__wrapper{width:702px;margin-right:48px}@media screen and (max-width:1130px){.footer__wrapper{margin-left:15px}}@media screen and (max-width:1010px){.footer__wrapper{margin-right:20px}}@media screen and (max-width:686px){.footer__wrapper{display:flex;flex-direction:column;justify-content:flex-end;margin-right:0;margin-left:0;width:0}}.footer__navigation{display:flex;justify-content:space-between;margin-top:62px;margin-bottom:0;padding-left:0}@media screen and (max-width:686px){.footer__navigation{display:none}}.footer__about-project{list-style:none}@media screen and (max-width:984px){.footer__about-project:not(:last-child){padding-right:20px}}.footer__advertisement{font:18px Cuprum;color:rgba(0,0,0,.47);letter-spacing:4px;transition:color ease .3s}.footer__advertisement:hover{color:rgba(44,43,43,.47)}@media screen and (max-width:1024px){.footer__advertisement{font-size:16px}}@media screen and (max-width:768px){.footer__advertisement{font-size:14px}}.footer__menu{display:flex;justify-content:space-between}@media screen and (max-width:686px){.footer__menu{display:none}}.footer__menu-links{margin-top:45px}.footer__title{font:15px 'Bebas Neue Regular';display:inline-block;color:#000;letter-spacing:3px;margin-top:0;margin-bottom:20px;cursor:pointer;transition:color ease .3s}.footer__title:hover{color:#4d4b4b}@media screen and (max-width:886px){.footer__title{font-size:13px}}@media screen and (max-width:786px){.footer__title{font-size:10px}}.footer__menu-link{font:16px Cuprum;display:block;color:#7c7c7c;transition:color ease .3s}.footer__menu-link:not(:last-child){margin-bottom:19px}.footer__menu-link:hover{color:#ada9a9}@media screen and (max-width:886px){.footer__menu-link{font-size:14px}}.footer__copyright{font:12px 'Bebas Neue Regular';color:#a19994;letter-spacing:3px;margin-top:51px}@media screen and (max-width:984px){.footer__copyright{margin-top:27px}}@media screen and (max-width:886px){.footer__copyright{margin-top:51px}}@media screen and (max-width:786px){.footer__copyright{font-size:10px}}@media screen and (max-width:736px){.footer__copyright{margin-top:37px}}@media screen and (max-width:686px){.footer__copyright{position:absolute;left:26%}}@media screen and (max-width:636px){.footer__copyright{position:absolute;left:24%}}@media screen and (max-width:536px){.footer__copyright{position:absolute;left:20%}}@media screen and (max-width:486px){.footer__copyright{position:absolute;left:17%}}@media screen and (max-width:436px){.footer__copyright{position:absolute;left:13%}}@media screen and (max-width:386px){.footer__copyright{position:absolute;left:8%}}@media screen and (max-width:320px){.footer__copyright{position:absolute;left:2%;text-align:center}}.main{background:url(/img/main/background.jpg) 0 0/cover;padding-top:350px;padding-bottom:390px;margin-top:-149.2px}.main .container{display:flex;flex-direction:column;align-items:center}@media screen and (max-width:1440px){.main{padding-top:220px;padding-bottom:250px}}.main__title{font:400 23px Cuprum}@media screen and (max-width:636px){.main__title{font-size:20px}}@media screen and (max-width:536px){.main__title{font-size:18px}}@media screen and (max-width:486px){.main__title{font-size:15px}}@media screen and (max-width:425px){.main__title{text-align:center}}@media screen and (max-width:386px){.main__title{font-size:14px}}.main__partners{display:flex;padding-left:0;margin-bottom:54px}.main__partner{list-style:none;font:400 12px Cuprum;color:#918077}.main__partner:not(:last-child){margin-right:45px}@media screen and (max-width:386px){.main__partner{font-size:14px}.main__partner:not(:last-child){margin-right:5px}}.main__search-field{background:rgba(185,55,119,.92);display:flex;align-items:stretch;height:60px;width:555px;box-shadow:4px 4px 10px rgba(0,0,0,.23)}@media screen and (max-width:686px){.main__search-field{width:80%}}@media screen and (max-width:486px){.main__search-field{width:70%}}@media screen and (max-width:425px){.main__search-field{display:none}}.main__text{background:0 0;border:none;width:100%;outline:0;padding-left:16px;font-size:16px}.main__loupe{background:0 0;border:none;padding-right:16px;cursor:pointer;transition:background-color ease .3s;padding-left:16px}.main__loupe:hover{background:rgba(200,200,200,.5)}.popular.container{display:flex;flex-direction:column;align-items:center}.popular__title{font:400 32.56px Cuprum;color:#232323;margin-top:82px;margin-bottom:80px}.popular__tabs{width:100%;position:relative}.popular__arrow{position:absolute;cursor:pointer}@media screen and (min-width:1071px){.popular__arrow{display:none}}.popular__arrow--left{left:40px;top:40%}.popular__arrow--right{transform:rotate(180deg);right:40px;bottom:35%}.popular__courses{display:flex;justify-content:center;width:100%;margin:0;border-bottom:1px solid #e3e5e8}@media screen and (max-width:1070px){.popular__courses{border-bottom:none;border:1px solid #a8a8a8}}.popular__course{list-style:none;overflow:hidden;position:relative;margin-bottom:-1px}.popular__course:not(:last-child){margin-right:44px}.popular__course button{font:13px HelveticaNeueCyr-Roman;background:0 0;border:none;color:#a8a8a8;cursor:pointer;padding:13px 10px;transition:color ease .3s}.popular__course::before{background:rgba(185,55,119,.06);content:"";position:absolute;top:50%;left:50%;width:150%;padding-top:150%;transform:translate(-50%,-50%) scale(0);border-radius:100%;transition:transform ease .3s;pointer-events:none;z-index:1}.popular__course::after{background:#b93777;content:"";position:absolute;width:100%;height:1px;left:0;bottom:0;opacity:0;z-index:2;transition:opacity ease .3s}@media screen and (max-width:1070px){.popular__course::after{display:none}}.popular__course:hover::before{transform:translate(-50%,-50%) scale(1)}@media screen and (max-width:1070px){.popular__course{display:none}}.popular__course--active{position:relative}.popular__course--active button{color:#b93777}@media screen and (max-width:1070px){.popular__course--active button{color:#a8a8a8}}.popular__course--active::after{opacity:1}@media screen and (max-width:1070px){.popular__course--active{display:block}}.popular__about-courses{display:flex;flex-wrap:wrap;justify-content:space-between}.popular .button{margin-top:63px}.about-course{display:flex;flex-direction:column;max-width:360px;width:100%}@media screen and (max-width:1200px){.about-course{width:275px}}@media screen and (max-width:1105px){.about-course{width:30%}}@media screen and (max-width:982px){.about-course{max-width:none;width:46%}}@media screen and (max-width:968px){.about-course{width:40%}}@media screen and (max-width:536px){.about-course{width:60%;margin:auto}}@media screen and (max-width:436px){.about-course{width:70%}}@media screen and (max-width:320px){.about-course{width:90%}}.about-course__line{display:flex;justify-content:space-between}.about-course__line:not(:last-child){margin-bottom:13px}.about-course__above-header{display:flex;justify-content:space-between;align-items:center;margin-top:70px}.about-course__growth{font:13px HelveticaNeueCyr-Roman;background:#b93777;color:#fff;padding:12px 20px}.about-course__title{font:15px/19px HelveticaNeueCyr-Roman;margin-bottom:9px}.about-course__university{font:13px HelveticaNeueCyr-Roman;color:#666d78;margin-top:0;margin-bottom:36px}.about-course__left{font:13px HelveticaNeueCyr-LightItalic;color:#6c6c6c}.about-course__right{font:13px HelveticaNeueCyr-LightItalic;color:#6c6c6c}.about-course__amount{font:11px HelveticaNeueCyr-Roman;color:#c3bbbb;margin-left:8px;margin-top:7px}.about-course__last-day{font:11px HelveticaNeueCyr-Roman;color:#c3bbbb;margin-left:11px;margin-top:7px}.about-course__recruitment{display:flex;justify-content:space-between;margin-top:45px;margin-bottom:42px}.about-course__date{display:flex;align-items:center}.about-course__people{display:flex;align-items:center}.about-course__characteristics{position:relative}.about-course__characteristics::before{background:#dfd9d5;content:"";position:absolute;width:1px;height:100%;left:50%}.about-course__heart{background:0 0;border:none;cursor:pointer;transition:background-color ease .3s;padding-top:5px;border-radius:100%;width:34px;height:34px}.about-course__heart:hover{background:rgba(185,55,119,.1)}.about{display:flex;flex-direction:column;align-items:center;margin-top:112px}.about__title{font:44.65px Cuprum;color:#232323;letter-spacing:13px;margin-top:124px;margin-bottom:60px}@media screen and (max-width:938px){.about__title{font-size:40px}}@media screen and (max-width:836px){.about__title{font-size:35px}}@media screen and (max-width:786px){.about__title{font-size:30px}}@media screen and (max-width:736px){.about__title{font-size:27px}}@media screen and (max-width:686px){.about__title{font-size:24px}}@media screen and (max-width:636px){.about__title{font-size:20px}}@media screen and (max-width:586px){.about__title{letter-spacing:9px}}@media screen and (max-width:486px){.about__title{letter-spacing:7px}}@media screen and (max-width:436px){.about__title{letter-spacing:5px}}@media screen and (max-width:386px){.about__title{letter-spacing:3px}}@media screen and (max-width:320px){.about__title{letter-spacing:2px}}.about__description{font:16px/26px Cuprum;width:925px;text-align:center;color:#5f5f5f;margin-top:0;margin-bottom:65px}@media screen and (max-width:938px){.about__description{width:95%}}@media screen and (max-width:636px){.about__description{font-size:13px}}.our-partner{max-width:360px}@media screen and (max-width:1130px){.our-partner{width:30%}}.our-partner__img{max-width:100%}.our-partner__about-university{display:flex;flex-direction:column;align-items:center}.our-partner__name-of-university{font:22px Cuprum;color:#4f433a;text-align:center;margin-top:35px;margin-bottom:23px}@media screen and (max-width:536px){.our-partner__name-of-university{font-size:18px}}@media screen and (max-width:320px){.our-partner__name-of-university{font-size:20px}}.our-partner__study{list-style:none;padding-left:0}.our-partner__amount{font:15px Cuprum;color:#b93777;text-align:center}@media screen and (max-width:536px){.our-partner__amount{font-size:12px}}@media screen and (max-width:320px){.our-partner__amount{font-size:15px}}@media screen and (max-width:436px){.our-partner{width:40%}.our-partner:nth-child(3){display:none}}@media screen and (max-width:320px){.our-partner{width:100%}.our-partner:nth-child(2){display:none}}.our-partners{display:flex;flex-direction:column;align-items:center}.our-partners__title{font:41px Cuprum;color:#232323;letter-spacing:12px;margin-top:110px;margin-bottom:76px}@media screen and (max-width:786px){.our-partners__title{font-size:30px}}@media screen and (max-width:736px){.our-partners__title{font-size:27px}}@media screen and (max-width:686px){.our-partners__title{font-size:24px}}@media screen and (max-width:636px){.our-partners__title{font-size:20px}}@media screen and (max-width:586px){.our-partners__title{letter-spacing:9px}}@media screen and (max-width:486px){.our-partners__title{letter-spacing:7px}}@media screen and (max-width:436px){.our-partners__title{letter-spacing:5px}}@media screen and (max-width:386px){.our-partners__title{letter-spacing:3px}}@media screen and (max-width:320px){.our-partners__title{letter-spacing:2px}}.our-partners__wrapper{width:100%;display:flex;justify-content:space-between}@media screen and (max-width:1130px){.our-partners__wrapper{width:90%}}.our-partners .button{margin-top:58px}.best-teacher{max-width:213px}.best-teacher__img{width:100%;border-radius:100%}@media screen and (max-width:992px){.best-teacher__img{width:200px;height:200px}}@media screen and (max-width:886px){.best-teacher__img{width:150px;height:150px}}@media screen and (max-width:736px){.best-teacher__img{width:130px;height:130px}}@media screen and (max-width:636px){.best-teacher__img{width:110px;height:110px}}@media screen and (max-width:636px){.best-teacher__img{width:100px;height:100px}}@media screen and (max-width:375px){.best-teacher__img{width:150px;height:150px}}.best-teacher__about{display:flex;flex-direction:column;align-items:center}.best-teacher__name{font:22px Cuprum;color:#4f433a;margin-top:60px;margin-bottom:23px;text-align:center}@media screen and (max-width:786px){.best-teacher__name{font-size:18px}}@media screen and (max-width:636px){.best-teacher__name{font-size:15px}}@media screen and (max-width:375px){.best-teacher__name{font-size:20px}}.best-teacher__subjects{font:15px Cuprum;color:#b93777;text-align:center}@media screen and (max-width:786px){.best-teacher__subjects{font-size:14px}}@media screen and (max-width:636px){.best-teacher__subjects{font-size:14px}}@media screen and (max-width:375px){.best-teacher__subjects{font-size:15px}}@media screen and (max-width:536px){.best-teacher:nth-child(4){display:none}}@media screen and (max-width:425px){.best-teacher{width:50%;text-align:center}.best-teacher:nth-child(3){display:none}}@media screen and (max-width:375px){.best-teacher{width:100%}.best-teacher:nth-child(2){display:none}}.best-teachers{display:flex;flex-direction:column;align-items:center;margin-top:138px}.best-teachers__title{font:40px Cuprum;color:#232323;letter-spacing:14px;margin-top:151px;margin-bottom:77px}@media screen and (max-width:786px){.best-teachers__title{font-size:30px}}@media screen and (max-width:736px){.best-teachers__title{font-size:27px}}@media screen and (max-width:686px){.best-teachers__title{font-size:24px}}@media screen and (max-width:636px){.best-teachers__title{font-size:20px}}@media screen and (max-width:586px){.best-teachers__title{letter-spacing:9px}}@media screen and (max-width:486px){.best-teachers__title{letter-spacing:7px}}@media screen and (max-width:436px){.best-teachers__title{letter-spacing:5px}}@media screen and (max-width:386px){.best-teachers__title{letter-spacing:3px}}@media screen and (max-width:320px){.best-teachers__title{letter-spacing:2px}}.best-teachers__slider{width:100%;position:relative}@media screen and (max-width:1155px){.best-teachers__slider{width:95%}}@media screen and (max-width:992px){.best-teachers__slider{width:90%}}.best-teachers__items{width:100%;display:flex;justify-content:space-between}@media screen and (max-width:375px){.best-teachers__items{justify-content:center}}.best-teachers__navigation{position:absolute;top:20%;cursor:pointer}.best-teachers__navigation--left{right:100%;margin-right:114px}@media screen and (max-width:1550px){.best-teachers__navigation--left{margin-right:70px}}@media screen and (max-width:1380px){.best-teachers__navigation--left{margin-right:30px}}@media screen and (max-width:1269px){.best-teachers__navigation--left{margin-right:20px;width:35px;height:72px}}@media screen and (max-width:1255px){.best-teachers__navigation--left{margin-right:18px;width:25px;height:60px}}@media screen and (max-width:1205px){.best-teachers__navigation--left{margin-right:10px;width:20px;height:45px}}.best-teachers__navigation--right{transform:rotate(180deg);left:100%;margin-left:114px}@media screen and (max-width:1550px){.best-teachers__navigation--right{margin-left:70px}}@media screen and (max-width:1380px){.best-teachers__navigation--right{margin-left:30px}}@media screen and (max-width:1269px){.best-teachers__navigation--right{margin-left:20px;width:35px;height:72px}}@media screen and (max-width:1255px){.best-teachers__navigation--right{margin-left:18px;width:25px;height:60px}}@media screen and (max-width:1205px){.best-teachers__navigation--right{margin-left:10px;width:20px;height:45px}}@media screen and (max-width:636px){.best-teachers__navigation{top:15%}}@media screen and (max-width:536px){.best-teachers__navigation{top:12%}}@media screen and (max-width:375px){.best-teachers__navigation{display:none}}.customer{max-width:254px}@media screen and (max-width:1040px){.customer{max-width:none;width:33%}}@media screen and (max-width:786px){.customer{max-width:none;width:100%;margin-bottom:40px}}.customer__to-whom{font:22px Cuprum;color:#1f1f1f;margin-top:62px;margin-bottom:55px}@media screen and (max-width:886px){.customer__to-whom{font-size:20px}}.customer__img{height:155px}.customer__description{font:16px/26px Cuprum;color:#5f5f5f;margin-bottom:48px}.customer__search{font:22px Cuprum;color:#002c73;transition:color ease .3s}.customer__search:hover{color:#1253bd}.customers{display:flex;flex-direction:column;align-items:center}@media screen and (max-width:1130px){.customers{width:80%}}@media screen and (max-width:786px){.customers{flex-wrap:wrap}}.customers__title{font:39px Cuprum;color:#232323;letter-spacing:10px;margin-top:154px;margin-bottom:91px}@media screen and (max-width:786px){.customers__title{font-size:30px}}@media screen and (max-width:736px){.customers__title{font-size:27px}}@media screen and (max-width:686px){.customers__title{font-size:24px}}@media screen and (max-width:636px){.customers__title{font-size:20px}}@media screen and (max-width:586px){.customers__title{letter-spacing:9px}}@media screen and (max-width:486px){.customers__title{letter-spacing:7px}}@media screen and (max-width:436px){.customers__title{letter-spacing:5px}}@media screen and (max-width:386px){.customers__title{letter-spacing:3px}}@media screen and (max-width:320px){.customers__title{letter-spacing:2px}}.customers__wrapper{display:flex;justify-content:space-between;text-align:center;width:100%}@media screen and (max-width:786px){.customers__wrapper{flex-wrap:wrap}}.customers__gallery{width:100%;display:flex;justify-content:space-between;margin-top:96px}@media screen and (max-width:1130px){.customers__img{width:30%}}.about-teacher{border-bottom:1px solid #a8a8a8}.about-teacher__data{display:flex;margin-top:67px}.about-teacher__contact{display:flex;flex-direction:column;align-items:center;width:263px;margin-bottom:33px}.about-teacher__application{font:12px Cuprum;background:#b93777;height:37px;border:none;color:#fff;cursor:pointer;margin-top:3px;transition:color ease .3s;width:100%}.about-teacher__application:hover{background:#ce5692}.about-teacher__price{font:14px Cuprum;color:#5f5f5f;margin-top:17px}.about-teacher__wrapper{display:flex;flex-direction:column;width:847px;padding-left:30px}.about-teacher__status-and-rating{display:flex;width:100%;justify-content:space-between}.about-teacher__teacher-status{display:flex;align-items:center}.about-teacher__ribbon{padding-right:10px}.about-teacher__status{font:13px Cuprum;color:#6d950d}.about-teacher__feedback{font:13px Cuprum;color:#5f5f5f;padding-left:22px;cursor:pointer;transition:color ease .3s}.about-teacher__feedback:hover{color:#8d8a8a}.about-teacher__personality{margin-top:21px}.about-teacher__name{font:14px/18px HelveticaNeueCyr-Roman;display:block;color:#5f5f5f;margin-bottom:13px}.about-teacher__years{font:13px Cuprum;color:#a8a8a8}.about-teacher__services{max-width:336px;margin-top:24px}.about-teacher__education{flex-direction:column;display:flex}.about-teacher__university{font:13px HelveticaNeueCyr-Roman;color:#5f5f5f;margin-top:44px;padding-bottom:19px}.about-teacher__science{font:13px 'Cuprum Italic';color:#a8a8a8;max-width:612px}.conducting-classes{display:flex}.conducting-classes__wrapper{max-width:263px}.conducting-classes__socials{list-style:none;display:flex;justify-content:space-between;padding-left:0;width:200px;margin-left:auto;margin-right:auto}.conducting-classes__link{display:flex;align-items:center;justify-content:center;border:1px solid #a8a8a8;width:48px;height:48px;transition:background-color ease .3s}.conducting-classes__link:hover{background:#e4e2e2}.conducting-classes .our-partner__amount{display:inline-block}.conducting-classes .our-partner__amount:nth-child(2){padding-left:7px}.conducting-classes .our-partner__study{position:relative}.conducting-classes .our-partner__study::before{background:#b93777;content:'';position:absolute;width:1px;height:100%;left:32%;margin-left:4px}.conducting-classes__class-location{margin-top:33px;margin-left:30px}.conducting-classes__place{font:13px HelveticaNeueCyr-Roman;padding-bottom:27px;color:#a8a8a8}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
