@font-face{font-family:HelveticaNeueCyr-Roman;src:url(../fonts/helveticaneuecyr-roman.eot);src:url(../fonts/helveticaneuecyr-roman.eot?#iefix) format("embedded-opentype"),url(../fonts/helveticaneuecyr-roman.woff2) format("woff2"),url(../fonts/helveticaneuecyr-roman.woff) format("woff"),url(../fonts/helveticaneuecyr-roman.ttf) format("truetype"),url(../fonts/helveticaneuecyr-roman.svg#helveticaneuecyr-roman) format("svg")}@font-face{font-family:Cuprum;src:url(../fonts/cuprum.eot);src:url(../fonts/cuprum.eot?#iefix) format("embedded-opentype"),url(../fonts/cuprum.woff2) format("woff2"),url(../fonts/cuprum.woff) format("woff"),url(../fonts/cuprum.ttf) format("truetype"),url(../fonts/cuprum.svg#cuprum) format("svg")}@font-face{font-family:'Bebas Neue Regular';src:url(../fonts/bebas_neue_regular.eot);src:url(../fonts/bebas_neue_regular.eot?#iefix) format("embedded-opentype"),url(../fonts/bebas_neue_regular.woff2) format("woff2"),url(../fonts/bebas_neue_regular.woff) format("woff"),url(../fonts/bebas_neue_regular.ttf) format("truetype"),url(../fonts/bebas_neue_regular.svg#bebas_neue_regular) format("svg")}@font-face{font-family:HelveticaNeueCyr-LightItalic;src:url(../fonts/helveticaneuecyr-lightitalic.eot);src:url(../fonts/helveticaneuecyr-lightitalic.eot?#iefix) format("embedded-opentype"),url(../fonts/helveticaneuecyr-lightitalic.woff2) format("woff2"),url(../fonts/helveticaneuecyr-lightitalic.woff) format("woff"),url(../fonts/helveticaneuecyr-lightitalic.ttf) format("truetype"),url(../fonts/helveticaneuecyr-lightitalic.svg#helveticaneuecyr-lightitalic) format("svg")}/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font:1em monospace,monospace}a{background:0 0}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font:1em monospace,monospace}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font:100%/1.15 inherit;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}template{display:none}[hidden]{display:none}*,::after,::before{box-sizing:inherit}html{box-sizing:border-box}body{font-family:Cuprum;margin:0}img{max-width:100%}a{text-decoration:none}.container{width:1170px;margin:0 auto}.header{display:flex;align-items:center;margin-top:40px;padding-left:37px;padding-right:32px}.header__link{font:15px 'Bebas Neue Regular';color:#000}.header__link:not(:last-child){margin-right:50px}.header__navigation{margin-left:50px;margin-right:auto}.header__city{font:15px 'Bebas Neue Regular';background:0 0;color:#000;border:1px solid #5e6260;padding:13px 44px 13px 20px}.header__city img{margin-right:35px}.header__educate{font:12px Cuprum;color:#b93777;margin-left:32px}.header__sign-in{font:12px Cuprum;color:#1d3369;margin-left:48px}.main{background:url(/img/main/background.jpg) 0 0/cover;padding-top:350px;padding-bottom:390px;margin-top:-149.2px}.main__title{font:400 23px Cuprum}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
