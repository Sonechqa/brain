@font-face{font-family:HelveticaNeueCyr-Roman;src:url(../fonts/helveticaneuecyr-roman.eot);src:url(../fonts/helveticaneuecyr-roman.eot?#iefix) format("embedded-opentype"),url(../fonts/helveticaneuecyr-roman.woff2) format("woff2"),url(../fonts/helveticaneuecyr-roman.woff) format("woff"),url(../fonts/helveticaneuecyr-roman.ttf) format("truetype"),url(../fonts/helveticaneuecyr-roman.svg#helveticaneuecyr-roman) format("svg")}@font-face{font-family:Cuprum;src:url(../fonts/cuprum.eot);src:url(../fonts/cuprum.eot?#iefix) format("embedded-opentype"),url(../fonts/cuprum.woff2) format("woff2"),url(../fonts/cuprum.woff) format("woff"),url(../fonts/cuprum.ttf) format("truetype"),url(../fonts/cuprum.svg#cuprum) format("svg")}@font-face{font-family:'Bebas Neue Regular';src:url(../fonts/bebas_neue_regular.eot);src:url(../fonts/bebas_neue_regular.eot?#iefix) format("embedded-opentype"),url(../fonts/bebas_neue_regular.woff2) format("woff2"),url(../fonts/bebas_neue_regular.woff) format("woff"),url(../fonts/bebas_neue_regular.ttf) format("truetype"),url(../fonts/bebas_neue_regular.svg#bebas_neue_regular) format("svg")}@font-face{font-family:HelveticaNeueCyr-LightItalic;src:url(../fonts/helveticaneuecyr-lightitalic.eot);src:url(../fonts/helveticaneuecyr-lightitalic.eot?#iefix) format("embedded-opentype"),url(../fonts/helveticaneuecyr-lightitalic.woff2) format("woff2"),url(../fonts/helveticaneuecyr-lightitalic.woff) format("woff"),url(../fonts/helveticaneuecyr-lightitalic.ttf) format("truetype"),url(../fonts/helveticaneuecyr-lightitalic.svg#helveticaneuecyr-lightitalic) format("svg")}.rating{position:relative}.rating__star{background:url(/img/icons/star-inactive.png) 0 0/cover;position:relative;display:inline-block;height:11px;width:11px}.rating__star:not(:last-child){margin-right:1px}.rating__active{background:url(/img/icons/star-active.png) repeat-x 0 0/12px 11px;position:absolute;height:100%;width:100%;top:0;left:0}.banner{width:100%}.banner__img{width:100%}.button{font:13px HelveticaNeueCyr-LightItalic;background:#fff;width:360px;display:flex;justify-content:center;color:#95979c;border:1px solid #95979c;padding:17px 0;transition:background-color ease .3s}.button:hover{background:rgba(61,53,57,.075)}.button--grey{font:14px HelveticaNeueCyr-Roman;background:#747474;color:#fff;padding:18px 0}.button--grey:hover{background:#919191}/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font:1em monospace,monospace}a{background:0 0}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font:1em monospace,monospace}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font:100%/1.15 inherit;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}template{display:none}[hidden]{display:none}*,::after,::before{box-sizing:inherit}html{box-sizing:border-box}body{font-family:Cuprum;margin:0}img{max-width:100%}a{text-decoration:none}.container{max-width:1140px;min-width:980px;margin:0 auto}.header{display:flex;align-items:center;margin-top:40px;padding-left:37px;padding-right:32px}.header__link{font:15px 'Bebas Neue Regular';color:#000;transition:color ease .3s}.header__link:not(:last-child){margin-right:50px}.header__link:hover{color:#646464}.header__navigation{margin-left:50px;margin-right:auto}.header__city{font:15px 'Bebas Neue Regular';background:0 0;color:#000;border:1px solid #5e6260;padding:13px 44px 13px 20px;cursor:pointer;transition:background-color ease .3s}.header__city img{margin-right:35px}.header__city:hover{background:rgba(255,255,255,.5)}.header__educate{font:12px Cuprum;color:#b93777;margin-left:32px;transition:color ease .3s}.header__educate:hover{color:#d3659c}.header__sign-in{font:12px Cuprum;color:#1d3369;margin-left:48px;transition:color ease .3s}.header__sign-in:hover{color:#4863a8}.footer{background:url(/img/footer/background.jpg);margin-top:108px}.footer__img-logo{margin-left:71px;margin-top:75px}.footer__socials{max-width:264px;margin-top:71px;padding-bottom:76px}.footer__social-networks{list-style:none;display:flex;justify-content:space-between;padding-left:0;position:relative}.footer__link{display:flex;justify-content:center;align-items:center;position:relative;width:41px;height:41px}.footer__link::before{background:#d3cac9;content:"";position:absolute;border-radius:50%;width:100%;height:100%;z-index:1;transition:background-color ease .3s}.footer__link:hover::before{background:#e0d5d4}.footer__img{position:relative;z-index:2}.main{background:url(/img/main/background.jpg) 0 0/cover;padding-top:350px;padding-bottom:390px;margin-top:-149.2px}.main__title{font:400 23px Cuprum}.main__partners{display:flex}.main__partner{list-style:none;font:400 12px Cuprum;color:#918077;margin-bottom:54px}.main__partner:not(:last-child){margin-right:45px}.main__search-field{background:rgba(185,55,119,.92);display:flex;align-items:stretch;height:60px;width:555px}.main__text{background:0 0;border:none;width:100%;outline:0;padding-left:16px;font-size:16px}.main__loupe{background:0 0;border:none;padding-right:16px;cursor:pointer;transition:background-color ease .3s;padding-left:16px}.main__loupe:hover{background:rgba(200,200,200,.5)}.main .container{display:flex;flex-direction:column;align-items:center}.popular.container{display:flex;flex-direction:column;align-items:center}.popular__title{font:400 32.56px Cuprum;color:#232323;margin-top:82px;margin-bottom:80px}.popular__courses{display:flex;justify-content:center;width:100%;margin:0;border-bottom:1px solid #e3e5e8}.popular__course{list-style:none;overflow:hidden;position:relative;margin-bottom:-1px}.popular__course:not(:last-child){margin-right:44px}.popular__course button{font:13px HelveticaNeueCyr-Roman;background:0 0;border:none;color:#a8a8a8;cursor:pointer;padding:13px 10px;transition:color ease .3s}.popular__course::before{background:rgba(185,55,119,.06);content:"";position:absolute;top:50%;left:50%;width:150%;padding-top:150%;transform:translate(-50%,-50%) scale(0);border-radius:100%;transition:transform ease .3s;pointer-events:none;z-index:1}.popular__course::after{background:#b93777;content:"";position:absolute;width:100%;height:1px;left:0;bottom:0;opacity:0;z-index:2;transition:opacity ease .3s}.popular__course:hover::before{transform:translate(-50%,-50%) scale(1)}.popular__course--active button{color:#b93777}.popular__course--active::after{opacity:1}.popular__about-courses{display:flex;flex-wrap:wrap;justify-content:space-between}.popular .button{margin-top:63px}.about-course{display:flex;flex-direction:column;width:360px}.about-course__line{display:flex;justify-content:space-between}.about-course__line:not(:last-child){margin-bottom:13px}.about-course__above-header{display:flex;justify-content:space-between;align-items:center;margin-top:70px}.about-course__growth{font:13px HelveticaNeueCyr-Roman;background:#b93777;color:#fff;padding:12px 20px}.about-course__title{font:15px/19px HelveticaNeueCyr-Roman;margin-bottom:9px}.about-course__university{font:13px HelveticaNeueCyr-Roman;color:#666d78;margin-top:0;margin-bottom:36px}.about-course__left{font:13px HelveticaNeueCyr-LightItalic;color:#6c6c6c}.about-course__right{font:13px HelveticaNeueCyr-LightItalic;color:#6c6c6c}.about-course__amount{font:11px HelveticaNeueCyr-Roman;color:#c3bbbb;margin-left:8px;margin-top:7px}.about-course__last-day{font:11px HelveticaNeueCyr-Roman;color:#c3bbbb;margin-left:11px;margin-top:7px}.about-course__recruitment{display:flex;justify-content:space-between;margin-top:45px;margin-bottom:42px}.about-course__date{display:flex;align-items:center}.about-course__people{display:flex;align-items:center}.about-course__characteristics{position:relative}.about-course__characteristics::before{background:#dfd9d5;content:"";position:absolute;width:1px;height:100%;left:50%}.about-course__heart{background:0 0;border:none;cursor:pointer;transition:background-color ease .3s;padding-top:5px;border-radius:100%;width:34px;height:34px}.about-course__heart:hover{background:rgba(185,55,119,.1)}.about{display:flex;flex-direction:column;align-items:center;margin-top:112px}.about__title{font:44.65px Cuprum;color:#232323;letter-spacing:13px;margin-top:124px;margin-bottom:60px}.about__description{font:16px/26px Cuprum;width:925px;text-align:center;color:#5f5f5f;margin-top:0;margin-bottom:65px}.our-partner{max-width:360px}.our-partner__img{max-width:100%}.our-partner__about-university{display:flex;flex-direction:column;align-items:center}.our-partner__name-of-university{font:22px Cuprum;color:#4f433a;text-align:center;margin-top:35px;margin-bottom:23px}.our-partner__study{list-style:none;padding-left:0}.our-partner__amount{font:15px Cuprum;color:#b93777;text-align:center}.our-partners{display:flex;flex-direction:column;align-items:center}.our-partners__title{font:41px Cuprum;color:#232323;letter-spacing:12px;margin-top:110px;margin-bottom:76px}.our-partners__wrapper{width:100%;display:flex;justify-content:space-between}.our-partners .button{margin-top:58px}.best-teacher{max-width:213px}.best-teacher__img{width:100%;border-radius:100%}.best-teacher__about{display:flex;flex-direction:column;align-items:center}.best-teacher__name{font:22px Cuprum;color:#4f433a;margin-top:60px;margin-bottom:23px;text-align:center}.best-teacher__subjects{font:15px Cuprum;color:#b93777}.best-teachers{display:flex;flex-direction:column;align-items:center;margin-top:138px}.best-teachers__title{font:40px Cuprum;color:#232323;letter-spacing:14px;margin-top:151px;margin-bottom:77px}.best-teachers__slider{width:100%;position:relative}.best-teachers__items{width:100%;display:flex;justify-content:space-between}.best-teachers__navigation{position:absolute;top:20%;cursor:pointer}.best-teachers__navigation--left{right:100%;margin-right:114px}.best-teachers__navigation--right{transform:rotate(180deg);left:100%;margin-left:114px}@media screen and (max-width:1550px){.best-teachers__navigation--left{margin-right:70px}.best-teachers__navigation--right{margin-left:70px}}@media screen and (max-width:1380px){.best-teachers__navigation--left{margin-right:30px}.best-teachers__navigation--right{margin-left:30px}}.customer{max-width:254px}.customer__to-whom{font:22px Cuprum;color:#1f1f1f;margin-top:62px;margin-bottom:55px}.customer__img{height:155px}.customer__description{font:16px/26px Cuprum;color:#5f5f5f;margin-bottom:48px}.customer__search{font:22px Cuprum;color:#002c73;transition:color ease .3s}.customer__search:hover{color:#1253bd}.customers{display:flex;flex-direction:column;align-items:center}.customers__title{font:39px Cuprum;color:#232323;letter-spacing:10px;margin-top:154px;margin-bottom:91px}.customers__wrapper{display:flex;justify-content:space-between;text-align:center;width:100%;padding-left:55px;padding-right:55px}.customers__gallery{width:100%;display:flex;justify-content:space-between;margin-top:96px}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
